tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://cloudify.co/spec/cloudify/4.5.5/types.yaml
  - plugin:cloudify-azure-plugin
  - plugin:cloudify-ansible-plugin
  - plugin:cloudify-utilities-plugin
  - includes/ansible.yaml
  - includes/ansible_db.yaml

inputs:

  resource_group_name:
    type: string
    description: Your Azure Resource Group.
    default: 01wordpress

  network_name:
    type: string
    description: Your Azure Virtual Network.
    default: 02wordpress

  subnet_name:
    type: string
    description: Your Azure Virtual Network Subnet.
    default: 03wordpress

  location:
    type: string
    description: Your Azure Region.
    default: East US

  image:
    default:
      publisher: Canonical
      offer: UbuntuServer
      sku: 14.04.5-LTS
      version: latest

  size:
    default: Standard_A0

  resource_prefix:
    default: wp

  resource_suffix:
    default: ''

  retry_after:
    type: integer
    default: 60

  agent_user:
    description: The user name of the agent on the instance created from the image.
    default: manager

  db_name:
    type: string
    description: Database.
    default: wordpress

  db_user:
    type: string
    description: Database User.
    default: wordpress

  db_pass:
    type: string
    description: Database User password.
    default: w@rdpr3sS

dsl_definitions:

  azure_config: &azure_config
    subscription_id: { get_secret: azure_subscription_id }
    tenant_id: { get_secret: azure_tenant_id }
    client_id: { get_secret: azure_client_id }
    client_secret: { get_secret: azure_client_secret }

node_templates:

  ##################
  # Common
  #################

  resource_group:
    type: cloudify.azure.nodes.ResourceGroup
    properties:
      name: { get_input: resource_group_name }
      location: { get_input: location }
      azure_config: *azure_config

  ##################
  # Network Layer
  #################

  network:
    type: cloudify.azure.nodes.network.VirtualNetwork
    properties:
      name: { get_input: network_name }
      resource_group_name: { get_input: resource_group_name }
      azure_config: *azure_config
      location: { get_input: location }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group

  subnet:
    type: cloudify.azure.nodes.network.Subnet
    properties:
      name: { get_input: subnet_name }
      resource_group_name: { get_input: resource_group_name }
      azure_config: *azure_config
      location: { get_input: location }
      resource_config:
        addressPrefix: 10.10.0.0/24
    relationships:
    - type: cloudify.azure.relationships.contained_in_virtual_network
      target: network


  network_security_group:
    type: cloudify.azure.nodes.network.NetworkSecurityGroup
    properties:
      name: {concat:['04',{get_input: resource_prefix},nsg,{get_input: resource_suffix}]}
      location: { get_input: location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
      resource_config:
        securityRules:
        - name: ssh
          properties:
            description: SSH access
            protocol: Tcp
            sourcePortRange: '*'
            destinationPortRange: 22
            sourceAddressPrefix: '*'
            destinationAddressPrefix: '*'
            priority: 100
            access: Allow
            direction: Inbound
        - name: http
          properties:
            description: HTTP access
            protocol: Tcp
            sourcePortRange: '*'
            destinationPortRange: 80
            sourceAddressPrefix: '*'
            destinationAddressPrefix: '*'
            priority: 101
            access: Allow
            direction: Inbound
        - name: mysqlin
          properties:
            description: HTTP access
            protocol: Tcp
            sourcePortRange: '*'
            destinationPortRange: 3306
            sourceAddressPrefix: '*'
            destinationAddressPrefix: '*'
            priority: 102
            access: Allow
            direction: Inbound
        - name: mysqlout
          properties:
            description: HTTP access
            protocol: Tcp
            sourcePortRange: '*'
            destinationPortRange: 3306
            sourceAddressPrefix: '*'
            destinationAddressPrefix: '*'
            priority: 103
            access: Allow
            direction: Outbound
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group




  ##################
  # Database Layer
  #################

  vm-database:
    type: cloudify.azure.nodes.compute.VirtualMachine
    properties:
      name: {concat:['05',{get_input: resource_prefix},database,{get_input: resource_suffix}]}
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      os_family: linux
      azure_config: *azure_config
      resource_config:
        hardwareProfile:
          vmSize: { get_input: size }
        storageProfile:
          imageReference: { get_input: image }
        osProfile:
          adminUsername: { get_input: agent_user }
          adminPassword: ''
          linuxConfiguration:
            ssh:
              publicKeys:
              - keydata: { get_secret: agent_key_public }
                path: { concat: [ '/home/', { get_input: agent_user }, '/.ssh/authorized_keys' ] }
            disablePasswordAuthentication: true
      agent_config:
        install_method: none
        key: { get_secret: agent_key_private }
        user: { get_input: agent_user }
      use_public_ip: true
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
    - type: cloudify.azure.relationships.connected_to_storage_account
      target: storage_account
    - type: cloudify.azure.relationships.connected_to_availability_set
      target: availability_set
    - type: cloudify.azure.relationships.connected_to_nic
      target: nic-db

  nic-db:
    type: cloudify.azure.nodes.network.NetworkInterfaceCard
    properties:
      name: {concat:['06',{get_input: resource_prefix},nicdb,{get_input: resource_suffix}]}
      location: { get_input: location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
    - type: cloudify.azure.relationships.nic_connected_to_network_security_group
      target: network_security_group
    - type: cloudify.azure.relationships.nic_connected_to_ip_configuration
      target: ip_config-db

  ip_config-db:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      name: {concat:['07',{get_input: resource_prefix},ipconfigdatabase,{get_input: resource_suffix}]}
      location: { get_input: location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
    - type: cloudify.azure.relationships.ip_configuration_connected_to_subnet
      target: subnet
    - type: cloudify.azure.relationships.ip_configuration_connected_to_public_ip
      target: ip-db

  ip-db:
    type: cloudify.azure.nodes.network.PublicIPAddress
    properties:
      name: {concat:['08',{get_input: resource_prefix},ipdatabase,{get_input: resource_suffix}]}
      location: { get_input: location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
      resource_config:
        publicIPAllocationMethod: Static
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group

  ##################
  # App Layer
  #################

  availability_set:
    type: cloudify.azure.nodes.compute.AvailabilitySet
    properties:
      name: {concat:['09',{get_input: resource_prefix},availabilityset,{get_input: resource_suffix}]}
      location: { get_input: location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group

  storage_account:
    type: cloudify.azure.nodes.storage.StorageAccount
    properties:
      name: {concat:['10',{get_input: resource_prefix},storageaccount,{get_input: resource_suffix}]}
      location: { get_input: location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
      resource_config:
        accountType: Standard_LRS
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group

  ######## App 1 ########

  vm-app1:
    type: cloudify.azure.nodes.compute.VirtualMachine
    properties:
      name: {concat:['11',{get_input: resource_prefix},app1,{get_input: resource_suffix}]}
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      os_family: linux
      azure_config: *azure_config
      resource_config:
        hardwareProfile:
          vmSize: { get_input: size }
        storageProfile:
          imageReference: { get_input: image }
        osProfile:
          adminUsername: { get_input: agent_user }
          adminPassword: ''
          linuxConfiguration:
            ssh:
              publicKeys:
              - keydata: { get_secret: agent_key_public }
                path: { concat: [ '/home/', { get_input: agent_user }, '/.ssh/authorized_keys' ] }
            disablePasswordAuthentication: true
      agent_config:
        install_method: none
        key: { get_secret: agent_key_private }
        user: { get_input: agent_user }
      use_public_ip: true
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
    - type: cloudify.azure.relationships.connected_to_storage_account
      target: storage_account
    - type: cloudify.azure.relationships.connected_to_availability_set
      target: availability_set
    - type: cloudify.azure.relationships.connected_to_nic
      target: nic1

  nic1:
    type: cloudify.azure.nodes.network.NetworkInterfaceCard
    properties:
      name: {concat:['12',{get_input: resource_prefix},app1nic,{get_input: resource_suffix}]}
      location: { get_input: location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
    - type: cloudify.azure.relationships.nic_connected_to_network_security_group
      target: network_security_group
    - type: cloudify.azure.relationships.nic_connected_to_ip_configuration
      target: ip_config1

  ip_config1:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      name: {concat:['13',{get_input: resource_prefix},app1ipconfig,{get_input: resource_suffix}]}
      location: { get_input: location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
    - type: cloudify.azure.relationships.ip_configuration_connected_to_subnet
      target: subnet
    - type: cloudify.azure.relationships.ip_configuration_connected_to_public_ip
      target: ip1

  ip1:
    type: cloudify.azure.nodes.network.PublicIPAddress
    properties:
      name: {concat:['14',{get_input: resource_prefix},app1ip,{get_input: resource_suffix}]}
      location: { get_input: location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
      resource_config:
        publicIPAllocationMethod: Static
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group

  ######## App 2 ########

  vm-app2:
    type: cloudify.azure.nodes.compute.VirtualMachine
    properties:
      name: {concat:['15',{get_input: resource_prefix},app2,{get_input: resource_suffix}]}
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      os_family: linux
      azure_config: *azure_config
      resource_config:
        hardwareProfile:
          vmSize: { get_input: size }
        storageProfile:
          imageReference: { get_input: image }
        osProfile:
          adminUsername: { get_input: agent_user }
          adminPassword: ''
          linuxConfiguration:
            ssh:
              publicKeys:
              - keydata: { get_secret: agent_key_public }
                path: { concat: [ '/home/', { get_input: agent_user }, '/.ssh/authorized_keys' ] }
            disablePasswordAuthentication: true
      agent_config:
        install_method: none
        key: { get_secret: agent_key_private }
        user: { get_input: agent_user }
      use_public_ip: true
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
    - type: cloudify.azure.relationships.connected_to_storage_account
      target: storage_account
    - type: cloudify.azure.relationships.connected_to_availability_set
      target: availability_set
    - type: cloudify.azure.relationships.connected_to_nic
      target: nic2

  nic2:
    type: cloudify.azure.nodes.network.NetworkInterfaceCard
    properties:
      name: {concat:['16',{get_input: resource_prefix},app2nic,{get_input: resource_suffix}]}
      location: { get_input: location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
    - type: cloudify.azure.relationships.nic_connected_to_network_security_group
      target: network_security_group
    - type: cloudify.azure.relationships.nic_connected_to_ip_configuration
      target: ip_config2

  ip_config2:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      name: {concat:['17',{get_input: resource_prefix},app2ipconfig,{get_input: resource_suffix}]}
      location: { get_input: location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
    - type: cloudify.azure.relationships.ip_configuration_connected_to_subnet
      target: subnet
    - type: cloudify.azure.relationships.ip_configuration_connected_to_public_ip
      target: ip2

  ip2:
    type: cloudify.azure.nodes.network.PublicIPAddress
    properties:
      name: {concat:['18',{get_input: resource_prefix},app2ip,{get_input: resource_suffix}]}
      location: { get_input: location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
      resource_config:
        publicIPAllocationMethod: Static
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group

outputs:

  application1_endpoint:
    description: The external endpoint of the application 1.
    value: { concat: [ 'http://', { get_attribute: [ vm-app1, public_ip ] }, ':80' ] }

  application2_endpoint:
    description: The external endpoint of the application 2.
    value: { concat: [ 'http://', { get_attribute: [ vm-app2, public_ip ] }, ':80' ] }

  database_endpoint:
    description: The external endpoint of the database.
    value: { concat: [ '', { get_attribute: [ vm-database, public_ip ] }, '' ] }
